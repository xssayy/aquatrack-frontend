{"version":3,"file":"SignUpPage-BTKgYUZc.js","sources":["../../src/components/SignUpForm/SignUpForm.jsx","../../src/pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import React, { useId, useState } from 'react';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport css from './SignUpForm.module.css';\nimport { signUp } from '../../redux/auth/operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio.js';\nimport LogoLink from '../LogoLink/LogoLink';\nimport Icon from '../Icon/Icon';\n\nconst emailRegExp = /^[\\w.-]+@[a-zA-Z]+\\.[a-zA-Z]{2,}$/;\n\nconst minPasswordLength = 8;\nconst maxPasswordLength = 32;\n\nconst registrationSchema = Yup.object({\n  email: Yup.string()\n    .required('Email is required!')\n    .matches(emailRegExp, 'Entered email address is not valid')\n    .email('Please enter a valid email address!'),\n  password: Yup.string()\n    .required('Password is required!')\n    .min(minPasswordLength, 'Too short')\n    .max(maxPasswordLength, 'Too long'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('Please confirm your password'),\n});\n\nconst SignUpForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const emailId = useId();\n  const passwordId = useId();\n  const repeatPasswordId = useId();\n  const dispatch = useDispatch();\n\n  const toggleVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(registrationSchema),\n  });\n\n  const onSubmit = data => {\n    dispatch(\n      signUp({\n        email: data.email,\n        password: data.password,\n      })\n    )\n      .unwrap()\n      .then(() => Notify.success('Registration success!'));\n    reset();\n  };\n\n  return (\n    <div className={css.signUpContainer}>\n      <LogoLink />\n      <div className={css.formContainer}>\n        <h2 className={css.title}>Sign Up</h2>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className={css.inputContainer}>\n            <div className={css.inputItem}>\n              <label htmlFor={emailId} className={css.label}>\n                Email\n              </label>\n              <input\n                id={emailId}\n                type=\"text\"\n                className={`${css.field} ${errors.email ? css.errorField : ''}`}\n                {...register('email')}\n                placeholder=\"Enter your email\"\n              />\n              <p className={css.error}>{errors.email?.message}</p>\n            </div>\n            <div className={css.inputItem}>\n              <label htmlFor={passwordId} className={css.label}>\n                Password\n              </label>\n              <input\n                id={passwordId}\n                {...register('password')}\n                type={showPassword ? 'text' : 'password'}\n                className={`${css.field} ${\n                  errors.password ? css.errorField : ''\n                }`}\n                placeholder=\"Enter your password\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => toggleVisibility('password')}\n                className={css.toggleVisibility}\n              >\n                {showPassword ? (\n                  <Icon id=\"eye\" width={20} height={20} />\n                ) : (\n                  <Icon id=\"eye-off\" width={20} height={20} />\n                )}\n              </button>\n              <p className={css.error}>{errors.password?.message}</p>\n            </div>\n            <div className={css.inputItem}>\n              <label htmlFor={repeatPasswordId} className={css.label}>\n                Repeat password\n              </label>\n              <input\n                id={repeatPasswordId}\n                {...register('confirmPassword')}\n                type={showPassword ? 'text' : 'password'}\n                className={`${css.field} ${\n                  errors.confirmPassword ? css.errorField : ''\n                }`}\n                placeholder=\"Repeat your password\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => toggleVisibility('password')}\n                className={css.toggleVisibility}\n              >\n                {showPassword ? (\n                  <Icon id=\"eye\" width={20} height={20} />\n                ) : (\n                  <Icon id=\"eye-off\" width={20} height={20} />\n                )}\n              </button>\n              <p className={css.error}>{errors.confirmPassword?.message}</p>\n            </div>\n          </div>\n\n          <input type=\"submit\" className={css.button} value=\"Sign Up\" />\n        </form>\n        <p className={css.redirect}>\n          Already have account?{' '}\n          <Link to=\"/signin\" className={css.redirectLink}>\n            Sign In\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import AdvantagesSection from '../../components/AdvantagesSection/AdvantagesSection';\nimport Container from '../../components/Container/Container';\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\nimport DocTitle from '../../components/DocTitle';\nimport style from './SignUpPage.module.css';\n\nconst SignUpPage = () => {\n  return (\n    <Container>\n      <DocTitle>SignUp</DocTitle>\n      <SignUpForm />\n      <div className={style.hidenSection}>\n        <AdvantagesSection />\n      </div>\n    </Container>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["emailRegExp","minPasswordLength","maxPasswordLength","registrationSchema","Yup.object","Yup.string","Yup.ref","SignUpForm","showPassword","setShowPassword","useState","emailId","useId","passwordId","repeatPasswordId","dispatch","useDispatch","toggleVisibility","register","handleSubmit","reset","errors","useForm","yupResolver","onSubmit","data","signUp","Notify","jsxs","css","jsx","LogoLink","_a","Icon","_b","_c","Link","SignUpPage","Container","DocTitle","style","AdvantagesSection"],"mappings":"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"}